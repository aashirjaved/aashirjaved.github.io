{"componentChunkName":"component---src-templates-post-js","path":"/pensieve/datadog-terraform/","result":{"data":{"markdownRemark":{"html":"<p>Greetings tech aficionados! Today, we delve into the world of infrastructure as code (IAC), focusing on using Terraform to deploy Datadog dashboards and monitoring.</p>\n<p>Datadog is an impressive tool that offers real-time performance tracking and visualizations that aid software teams in deeply understanding their systems. Terraform, on the other hand, is an open-source infrastructure as code tool built by HashiCorp. It allows users to define and provide data center infrastructure using a declarative configuration language. By leveraging Terraform, we can script our dashboard setups, avoid manual clicks and set up a system that can be version controlled, reproducible, and ready for continuous deployment.</p>\n<p><img src=\"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpuhle0waaumftj75yrd.png\" alt=\"Datadog Dashboard\"></p>\n<p>Let’s dive right into how to use Terraform to deploy your Datadog dashboards.</p>\n<h2>SET UP</h2>\n<p>Firstly, you’ll need to have an established Terraform environment. If you’re new to Terraform, <a href=\"https://developer.hashicorp.com/terraform/downloads\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">you can download it from the official website</a>. You also need to have access to Datadog API and App keys to communicate with Datadog. These keys will be used by Terraform to set up dashboards in Datadog.</p>\n<h2>Terraform Provider for Datadog</h2>\n<p>Next, you’ll have to declare the Datadog provider in your Terraform configuration file. Here’s a simple example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">provider \"datadog\" {\n    api_key = \"your_datadog_api_key\"\n    app_key = \"your_datadog_application_key\"\n}</code></pre></div>\n<h2>Defining the Dashboard Resource</h2>\n<p>In Terraform, the set-up you need (like users, roles, databases, dashboards, etc.) is generally referred to as a resource. For example, we use <code class=\"language-text\">datadog_dashboard</code> to define a Datadog dashboard. Below is a simple dashboard configuration.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">resource \"datadog_dashboard\" \"STATS\" {\n    title        = \"My STATS\"\n    description  = \"A TABLE with important metrics\"\n    layout_type  = \"ordered\"\n    is_read_only = \"true\"\n    widget {\n        event_stream_definition {\n            query = \"*\"\n            event_size = \"l\"\n            title = \"All events\"\n        }\n        layout = {\n            height = 20\n            width = 30\n            x = 0\n            y = 0\n        }\n    }\n}</code></pre></div>\n<h2>Apply Changes</h2>\n<p>After you’ve defined the dashboard, run the <code class=\"language-text\">terraform plan</code> command to review the changes. Once you’re sure you’re prepared to deploy, run terraform apply to create the dashboard in Datadog.</p>\n<p>The great thing about using Terraform is that you can modify the dashboard’s resource block and repeat the process to update your Dashboard. You can version control the set-up, making it easy to replicate across different environments.</p>\n<h2>Monitoring Alerts</h2>\n<p>Not only can you create dashboards, but you can also create monitors — a fantastic feature of Datadog. Monitors provide alerts and notifications when a specified metric meets certain conditions. Below is a block of Terraform configuration for defining a datadog monitor.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">resource \"datadog_monitor\" \"anomaly\" {\n    name = \"Anomaly detection on data points.\"\n    type = \"query alert\"\n    query = \"avg(last_4h):anomalies(avg:aws.ec2.cpuutilization{environment:prod} by {instance-id}, 'basic', 2, direction='both', alert_window='last_5m', interval=20, count_default_zero='false', seasonality='daily') >= 1\"\n    message = \"Notify @TEAM if the cpu utilisation is unusually high or low.\"\n}</code></pre></div>\n<p>Terraform’s simplicity combined with the power of Datadog’s advanced monitoring and alerting capabilities results in more time spent improving your applications and less time clicking around web interfaces.</p>\n<p>By using Terraform for deploying your Datadog dashboards, you shift from manual, error-prone deployments to automatic, error-free deployments. This way, your team can build better, more reliable software, and most importantly, you create a much more efficient DevOps culture.</p>","frontmatter":{"title":"Efficient Deployment of Datadog Dashboards and Monitoring using Terraform","description":"Automating Datadog resource deployments using Infrastructure as a code","date":"2019-12-13","slug":"/pensieve/datadog-terraform/","tags":["Datadog","Terraform","Monitoring"]}}},"pageContext":{}},"staticQueryHashes":["3115057458"],"slicesMap":{}}